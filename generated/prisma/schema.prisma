// This is your Prisma schema file
generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  firebaseUid String   @unique
  email       String   @unique
  fullName    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  apiKeys     ApiKey[]
  appliedJobs AppliedJob[]

  @@index([firebaseUid])
  @@index([email])
}

model ApiKey {
  id     String @id @default(cuid())
  key    String @unique
  name   String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt  DateTime  @default(now())
  lastUsedAt DateTime?
  isActive   Boolean   @default(true)

  @@index([key])
  @@index([userId])
  @@index([isActive])
}

model AppliedJob {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  title       String
  company     String?
  location    String?
  url         String
  appliedDate DateTime @default(now())
  appliedText String?
  status      String   @default("Applied")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, url])
  @@index([userId])
  @@index([status])
}
